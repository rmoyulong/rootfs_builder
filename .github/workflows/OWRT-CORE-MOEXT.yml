#云编译公用核心
name: OWRT-CORE-MOEXT

on:
  #公用核心标识
  workflow_call:
    inputs:
      OWRT_TARGET:
        required: true
        type: string
      OWRT_THEME:
        required: true
        type: string
      OWRT_NAME:
        required: true
        type: string
      OWRT_URL:
        required: true
        type: string
      OWRT_PW:
        required: true
        type: string
      OWRT_IP:
        required: true
        type: string
      OWRT_CFG:
        required: true
        type: string
      OWRT_BRANCH:
        required: true
        type: string
      OWRT_TYPE:
        required: true
        type: string
      OWRT_LINUX:
        required: true
        type: string
      OWRT_FILES:
        required: true
        type: string   
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  OWRT_TARGET: ${{inputs.OWRT_TARGET}}
  OWRT_THEME: ${{inputs.OWRT_THEME}}
  OWRT_NAME: ${{inputs.OWRT_NAME}}
  OWRT_URL: ${{inputs.OWRT_URL}}
  OWRT_PW: ${{inputs.OWRT_PW}}
  OWRT_IP: ${{inputs.OWRT_IP}}
  OWRT_CFG: ${{inputs.OWRT_CFG}}
  OWRT_BRANCH: ${{inputs.OWRT_BRANCH}}
  OWRT_TYPE: ${{inputs.OWRT_TYPE}}
  OWRT_LINUX: ${{inputs.OWRT_LINUX}}  
  OWRT_FILES: ${{inputs.OWRT_FILES}}
  TZ: Asia/Shanghai
  #USE_CACHEWRTBUILD: true
  
jobs:
  owrt_core_mo_EXT:
    runs-on: ubuntu-latest
    steps:
      - name: 项目检查
        uses: actions/checkout@main

      - name: 检查分配的服务器性能
        run: |
          echo "警告⚠"
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
          echo -e "已知CPU型号（降序）：7763，8370C，8272CL，8171M，E5-2673 \n"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
          echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息："
          echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
          echo "--------------------------硬盘信息--------------------------"
          echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT        
          
      - name: 初始化编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E rm -rf $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "1{s/\r$//;p;q}")
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir          

      - name: 初始化变量
        run: |
          export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export OWRT_SOURCE=$(echo $OWRT_URL | cut -d '/' -f 5-)
          #export OWRT_TYPE="cortex-a53"

          echo "OWRT_SOURCE=$OWRT_SOURCE" >> $GITHUB_ENV
          echo "OWRT_TARGET=$OWRT_TARGET" >> $GITHUB_ENV
          echo "OWRT_DATE=$OWRT_DATE" >> $GITHUB_ENV
          echo "OWRT_TYPE=$OWRT_TYPE" >> $GITHUB_ENV
          echo "OWRT_PW=$OWRT_PW" >> $GITHUB_ENV
          echo "OWRT_IP=$OWRT_IP" >> $GITHUB_ENV
          echo "OWRT_LINUX=$OWRT_LINUX" >> $GITHUB_ENV

      - name: 检查脚本
        run: |
          cd ./Scripts

          dos2unix ./*.sh
          chmod +x ./*.sh

      - name: 克隆源码库
        working-directory: /workdir
        run: |
          # Set up compilation source code
          if [[ "${{ inputs.OWRT_URL }}" == *"openwrt"* ]]; then
              REPO_URL="https://github.com/openwrt/openwrt"
              REPO_BRANCH="main"
              TAGS_NAME="official"
          elif [[ "${{ inputs.OWRT_URL }}" == *"lede"* ]]; then
              REPO_URL="https://github.com/coolsnowwolf/lede"
              REPO_BRANCH="master"
              TAGS_NAME="lede"
          elif [[ "${{ inputs.OWRT_URL }}" == *"immortalwrt"* ]]; then
              REPO_URL="https://github.com/immortalwrt/immortalwrt"
              REPO_BRANCH="master"
              TAGS_NAME="immortalwrt"
          else
              echo "Unknown source code repository."
              exit 1
          fi
          
          df -hT $PWD
          git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          [ -e $GITHUB_WORKSPACE/Config/$OWRT_CFG ] && echo "DEVICE_NAME=$(grep '^CONFIG_TARGET_.*_.*_DEVICE_.*=y' $GITHUB_WORKSPACE/Config/$OWRT_CFG | sed -r 's/.*DEVICE_(.*)=y/\1/')" >> $GITHUB_ENV

      - name: 加载自定义订阅源
        run: |
          cd openwrt
          
          $GITHUB_WORKSPACE/Scripts/Plugins.sh
          #echo 'src-git mo_small https://github.com/kenzok8/small-package' >>feeds.conf.default
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          
          #mv $GITHUB_WORKSPACE/patch/0001-ipq807x-add-stock-layout-variant-for-redmi-ax6.patch 0001-ipq807x-add-stock-layout-variant-for-redmi-ax6.patch
          #git apply 0001-ipq807x-add-stock-layout-variant-for-redmi-ax6.patch
        
          chmod +x $GITHUB_WORKSPACE/patch/*.sh
          chmod -Rf 755 $GITHUB_WORKSPACE/patch/*
          mv $GITHUB_WORKSPACE/patch/01_leds target/linux/qualcommax/ipq807x/base-files/etc/board.d/01_leds
          mv $GITHUB_WORKSPACE/patch/02_network target/linux/qualcommax/ipq807x/base-files/etc/board.d/02_network
          mv $GITHUB_WORKSPACE/patch/11-ath10k-caldata target/linux/qualcommax/ipq807x/base-files/etc/hotplug.d/firmware/11-ath10k-caldata
          mv $GITHUB_WORKSPACE/patch/11-ath11k-caldata target/linux/qualcommax/ipq807x/base-files/etc/hotplug.d/firmware/11-ath11k-caldata
          mv $GITHUB_WORKSPACE/patch/bootcount target/linux/qualcommax/ipq807x/base-files/etc/init.d/bootcount
          mv $GITHUB_WORKSPACE/patch/platform.sh target/linux/qualcommax/ipq807x/base-files/lib/upgrade/platform.sh
          mv $GITHUB_WORKSPACE/patch/ipq807x.mk target/linux/qualcommax/image/ipq807x.mk 
          mv $GITHUB_WORKSPACE/patch/ipq8071-ax6-stock.dts target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq8071-ax6-stock.dts
          mv $GITHUB_WORKSPACE/patch/ipq8071-ax3600-stock.dts target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq8071-ax3600-stock.dts
          mv $GITHUB_WORKSPACE/patch/qualcommax_ipq807x package/boot/uboot-envtools/files/qualcommax_ipq807x
 
      - name: 启动缓存[第二次起生效]
        uses: rmoyulong/cachewrtbuild@main
        with:
          ccache: 'true'
          prefix: ${{ github.workspace }}/openwrt
          mixkey: ${{ env.OWRT_URL }}/tree/${{ env.OWRT_BRANCH }}?device=${{ env.DEVICE_NAME }}-${{ env.OWRT_LINUX }} 		  

      - name: 更新订阅源
        run: |
          cd openwrt

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 自定义脚本
        run: |
          cd openwrt
          
          cp -rf $GITHUB_WORKSPACE/ax6/banner package/base-files/files/etc/banner
          $GITHUB_WORKSPACE/Scripts/Settings.sh
          
          if [[ $OWRT_LINUX == *"6.1.x"*  ]] ; then
            cd ./package
            $GITHUB_WORKSPACE/Scripts/custom.sh
          fi
          
      - name: 自定义设置
        run: |
          #[ -e files ] && mv files openwrt/files
          cd openwrt

          rm -rf ./tmp* ./.config*
          #rm -rf $(find ./ -type f -iname "*.config*")
          #make dirclean
          [ -e $GITHUB_WORKSPACE/Config/$OWRT_CFG ] && mv $GITHUB_WORKSPACE/Config/$OWRT_CFG .config
          echo -e 'CONFIG_PACKAGE_luci-app-unblockmusic=n\n' >> .config
          echo -e 'CONFIG_PACKAGE_luci-app-unblockneteasemusic=n\n' >> .config

          #nftable设置
          if [[ $OWRT_LINUX == *"6.1"*  ]] ; then
            [ -e $GITHUB_WORKSPACE/patch/files ] && mv $GITHUB_WORKSPACE/patch/files ./files
          fi
          
          make defconfig

      - name: 下载编译依赖
        working-directory: ./openwrt
        run: |
          make download -j$(nproc)
          #make download -j8
          #make -j16 download
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译固件
        working-directory: ./openwrt
        run: |     
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV  

      - name: 整理固件
        run: |
          cd openwrt && mkdir ./upload

          rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")
          cp -rf $(find ./bin/targets/ -type f -iname "*.*") ./upload/
          cp -rf ./.config ./upload/Config_"$OWRT_TARGET"_"$OWRT_SOURCE"_"$OWRT_DATE".txt

          cd ./upload

          $GITHUB_WORKSPACE/Scripts/Renames.sh

      - name: 生成固件标签
        uses: rmoyulong/action-gh-release@master
        with:
          tag_name: ${{env.OWRT_TARGET}}_${{env.OWRT_SOURCE}}_${{env.OWRT_DATE}}
          files: openwrt/upload/*.*
          body: |
            个人使用的AX6固件！
            刷机有风险！刷前需谨慎！

            源码：${{env.OWRT_SOURCE}}
            平台：${{env.OWRT_TARGET}}
            设备：${{env.OWRT_TYPE}}
            密码：${{env.OWRT_PW}}
            地址：${{env.OWRT_IP}}
            内核：${{env.OWRT_LINUX}}

      - name: 清理Releases
        uses: rmoyulong/delete-older-releases@master
        with:
          keep_latest: 6
          delete_tags: true

      - name: 清理Workflows
        uses: rmoyulong/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
